name: Simple CI/CD Pipeline

on:
  workflow_dispatch:


 
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout Repository
        uses: actions/checkout@v2
      - name: Create a new directory and files under python-practice
        run: |
          # Create a new directory
          mkdir -p python-practice/new-directory
          
          # Create some files inside the new directory
          echo "This is a sample file 1" > python-practice/new-directory/file1.txt
          echo "This is a sample file 2" > python-practice/new-directory/file2.txt
          echo "This is a sample file 3" > python-practice/new-directory/file3.txt

      - name: List contents of the new directory
        run: ls -al python-practice

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-without-markdown
          path: |
           python-practice/new-directory/file1.txt
           python-practice/new-directory/file2.txt
           python-practice/new-directory/file3.txt

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          path: |
            python-practice/new-directory/file1.txt
            python-practice/new-directory/file2.txt
            python-practice/new-directory/file3.txt

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: my-artifact
      # Step 2: Cache dependencies
      - name: Cache Node modules
        id: cache-node
        uses: actions/cache@v2
        with:
          path: python-practice/new-directory/file1.txt
          
      # Step 3:  
      - name: What is the event?
        run: |
           if [ ${{ github.event_name }} == 'pull_request' ]; then
             echo "This is a pull request event"
           elif [ ${{ github.event_name }} == 'push' ]; then
             echo "This is a push event"
           else
             echo "This is an unknown event"
           fi  
      
      # Step 3: Install dependencies if not cached
      - name: Install Dependencies
        run: npm install

      # Step 4: Run tests only if on main branch
      - name: Run Tests
        if: github.ref == 'refs/heads/main'
        run: npm test
